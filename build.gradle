plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'org.jetbrains.kotlin.jvm'
}

group = 'com.ademozalp'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	// root
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// database & validation
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	// File storage
	implementation 'com.google.firebase:firebase-admin:latest.integration'

	// config centralise
	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'

	// kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	runtimeOnly 'org.jetbrains.kotlin:kotlin-reflect'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:latest.integration'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
